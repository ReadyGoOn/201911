设计模式
1.程序设计的六大原则
	单一原则：降低代码的耦合度，一个功能写在一个模块中，
	里氏替换原则：使用继承时遵守里氏替换原则，一方面继承父类的方法，避免重写父类方法，一方面也可以方便扩展
	依赖倒置原则：
	接口隔离原则：
	迪米特原则：
	开闭原则：
	一：在设计程序时候，职责要尽可能的单独，单一，不要混合在一起，如果混在一起的话，耦合度太高，不安全
	二：如果一个功能用到了很多次，尽可能的用继承，但继承时不要去复写父类的内容
	三：为了让我们的代码更加健壮，扩展性更好，要尽可能的去抽象/接口，具体实现，让子类去实现
	四：如果要去继承一个接口的话，要尽量用最小的接口
	五：类和类之间，为了彼此的扩展性更好，耦合度更低，要减少彼此的‘认识’
	六：在做功能或者项目修改的时候，一般的话，不会再原有代码里面去改，这样工程量太大，
		通常做法，去扩展，原来的里面需要的东西直接去继承，原来里面没有的就自己去写。
2.单列模式
	节约资源，安全
3.工厂模式

低耦合高内聚
低耦合：更安全





